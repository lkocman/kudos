#!/usr/bin/env bash
# ðŸ¦¡ badger â€” Example bot to grant badges via API
# SPDX-License-Identifier: Apache-2.0
# Copyright Â© 2025â€“present Lubos Kocman
# and openSUSE contributors

set -euo pipefail

API_BASE="${API_BASE:-https://localhost:3000/api}"
API_GRANT="$API_BASE/badges/grant"
API_BADGES="$API_BASE/badges"
BADGER_BOT_SECRET="${BADGER_BOT_SECRET:-DEV_STATIC_BOT_TOKEN_123}"
INSECURE_SSL=0

# --- Default curl options (can be overridden with -i) ---
CURL_OPTS=(-s)

# --- Usage help ---
usage() {
  cat <<EOF
ðŸ¦¡ Badger Bot â€“ Grant openSUSE membership badge

Usage:
  $0 -u USERNAME [options]

Options:
  -u USERNAME     Username to grant the badge to
  -i              Allow insecure SSL (skip verification)
  -h              Show this help message

Examples:
  $0 -l
  $0 -u klocman -i

Environment variables:
  API_BASE            Base API URL (default: $API_BASE)
  BADGER_BOT_SECRET   API token (default: DEV_STATIC_BOT_TOKEN_123)
EOF
}

# --- Parse command-line options ---
USER=""
BADGE="member"

while getopts "u:b:lih" opt; do
  case "$opt" in
    u) USER="$OPTARG" ;;
    i) INSECURE_SSL=1 ;;
    h) usage; exit 0 ;;
    *) usage; exit 1 ;;
  esac
done

# --- Adjust curl opts if insecure mode is enabled ---
if [[ "$INSECURE_SSL" == "1" ]]; then
  CURL_OPTS=(-sk)
fi

# --- Validate inputs ---
if [[ -z "$USER" || -z "$BADGE" ]]; then
  usage
  exit 1
fi

echo "              _.-=-._                     "
echo "           o~\`  '  > )--.               "
echo "           \`.  ,       ) ) )-.         "
echo "             \`'-._   ,;_,'  ) \\        "
echo "               (  \\       /   ;        "
echo "               |   |     /   /         "
echo "               |  /'._  /  ,'          "
echo "             .'  /    \`'-./            "
echo "          _.'   /                     "
echo "         /  .-''     BADGER BOT ðŸ¦¡     "
echo "        (  (                      "
echo "         '-'\__                  "
echo
echo "ðŸ’š  Unleashing badger ðŸ¤–, granting '$BADGE' to '$USER'..."

curl "${CURL_OPTS[@]}" -X POST "$API_GRANT" \
  -H "Authorization: Bearer $BADGER_BOT_SECRET" \
  -H "Content-Type: application/json" \
  -d "{\"username\": \"$USER\", \"badgeSlug\": \"$BADGE\"}" \
  | jq -r '.message // .error // "âœ… granted"'
